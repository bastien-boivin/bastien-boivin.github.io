{"Gestion-des-environnements-Python":{"slug":"Gestion-des-environnements-Python","filePath":"Gestion des environnements Python.md","title":"Gestion des environnements Python","links":[],"tags":[],"content":""},"Notes/Linux/deb":{"slug":"Notes/Linux/deb","filePath":"Notes/Linux/deb.md","title":"deb","links":[],"tags":[],"content":""},"Notes/Profil/Profil":{"slug":"Notes/Profil/Profil","filePath":"Notes/Profil/Profil.md","title":"Profil","links":[],"tags":["profil","cv"],"content":"üéì Formation &amp; Recherche\n\n\n                  \n                  Th√®se de Doctorat (2024-2027) \n                  \n                \n\n\nUniversit√© de Rennes ‚Ä¢ G√©osciences Rennes (UMR 6118)\nTitre : ¬´ Int√©gration de la mod√©lisation de l‚Äôimpact du changement climatique sur la ressource en eau au sein des outils de gestion pr√©visionnelle de la production d‚Äôeau potable : exemple du Bassin Rennais ¬ª\nEncadrement :\n\nJean-Raynald de Dreuzy (G√©osciences Rennes)\nLuc Aquilina (G√©osciences Rennes)\nJean-Yves Gaubert (SPL Eau du Bassin Rennais)\n\nFinancement : Th√®se CIFRE financ√©e par Eau du Bassin Rennais dans le cadre de la Chaire Eaux et Territoires (phase II)\n√âquipe : Eaux et Territoires\n\n\n\n\nüíº Exp√©rience Professionnelle\nüî¨ Doctorant en Mod√©lisation Hydrog√©ologique\nUniversit√© de Rennes ‚Ä¢ Oct. 2024 - Sept. 2027\nD√©veloppement de mod√®les coupl√©s surface-souterrain pour √©valuer l‚Äôimpact du changement climatique sur la ressource en eau. Contribution active aux projets HydroModPy et GeoP4th.\nüèóÔ∏è Alternant Ing√©nieur Hydrog√©ologue\nBRGM Bretagne ‚Ä¢ Sept. 2023 - Sept. 2024\nContribution au SIGES Bretagne, synth√®se des param√®tres hydrodynamiques, cartographie des p√©rim√®tres de protection, √©laboration d‚Äôitin√©raires hydrog√©ologiques.\nüß™ Stagiaire Ing√©nieur Hydrog√©ologue\nBRGM Bretagne ‚Ä¢ Mai 2023 - Ao√ªt 2023\nInitiation aux m√©thodes d‚Äôinvestigation hydrog√©ologique et participation aux projets de recherche du service g√©ologique r√©gional.\n\nüöÄ Projets de Recherche\n\n  \n    \n      \n      \n        HydroModPy\n        Bo√Æte √† outils Python pour la mod√©lisation hydrog√©ologique\n      \n    \n    Contribution active durant ma th√®se au d√©veloppement de la mod√©lisation des r√©servoirs et lacs. HydroModPy automatise le d√©ploiement de mod√®les d&#039;eaux souterraines √† l&#039;√©chelle des bassins versants.\n    Co-auteur\n    MODFLOW\n    Python\n  \n  \n    \n      \n      \n        GeoP4th\n        Plateforme de traitement de trajectoires spatio-temporelles\n      \n    \n    D√©veloppement d&#039;outils pour l&#039;analyse des trajectoires dans le cadre de mes recherches sur les interactions surface-subsurface. Contribution aux modules de traitement des donn√©es spatio-temporelles.\n    Contributeur\n    G√©ospatial\n    Python\n  \n\n\nüìù Publications &amp; Communications\n\n\n                  \n                  HydroModPy: A Python toolbox for deploying catchment-scale shallow groundwater models \n                  \n                \n\n\nPreprint ‚Ä¢ EGUsphere (2025)\nAuteurs : A. Gauvain, R. Abherv√©, A. Coche, M. Le Mesnil, C. Roques, C. Bouchez, S. Leray, E. Marti, R. Figueroa, E. Bresciani, C. Vautier, B. Boivin, et al.\nPr√©sentation d‚Äôune bo√Æte √† outils Python open-source pour automatiser le d√©ploiement de mod√®les d‚Äôeaux souterraines √† l‚Äô√©chelle des bassins versants.\n‚Üí Lire le preprint\n\n\n\n\n\n                  \n                  Coupled surface-water and groundwater modeling approach to optimize drinking-water dam management \n                  \n                \n\n\nAbstract accept√© ‚Ä¢ OZCAR TERENO 2025\nAuteurs : B. Boivin, A. Coche, R. Abherv√©, R. Guillossou, J.-Y. Gaubert, L. Aquilina, J.-R. De Dreuzy\nPr√©sentation de l‚Äôapproche de mod√©lisation coupl√©e d√©velopp√©e pour optimiser la gestion des barrages d‚Äôeau potable sous l‚Äôimpact du changement climatique.\nConf√©rence : Paris, 29 septembre - 2 octobre 2025\nFocus : Barrage de Ch√®ze (Bretagne) - Mod√©lisation des interactions surface-subsurface pour 500 000 habitants de la m√©tropole rennaise\n\n\n\n\nüõ†Ô∏è Comp√©tences Techniques\nüêç Programmation &amp; D√©veloppement\n\nLangages : Python, bash\nOutils : FloPy, Pandas, NumPy, Matplotlib, Streamlit, ‚Ä¶\nVersioning : Git, GitLab, GitHub\nM√©thodologie : D√©veloppement open-source, FAIR principles\n\nüíß Mod√©lisation Hydrog√©ologique\n\nLogiciels : MODFLOW-NWT, MODPATH, MT3DMS\nModules : LAK (Lake), SFR (Streamflow Routing), DIS (Discretization)\nSp√©cialit√©s : Couplage surface-subsurface, aquif√®res cristallins, Mod√©lisation de Lac\nApplications : Gestion de ressources, changement climatique\n\nüó∫Ô∏è Outils G√©ospatiaux\n\nLibrairies : WhiteboxTools, GDAL, Rasterio\nSIG : QGIS, Python\nDonn√©es : MNT, Raster, NetCDF, xyz\nAnalyses : D√©limitation de bassins versants, r√©seaux hydrographiques\n\nüåç Changement Climatique &amp; Gestion\n\nDonn√©es climatiques : SIM2 (M√©t√©o-France), projections IPCC, ERA5-Land ‚Ä¶\nMod√©lisation : Sc√©narios climatiques, impacts hydrologiques\nApplications : Aide √† la d√©cision, gestion pr√©visionnelle\nSecteurs : Production d‚Äôeau potable, ressources en eau\n\n\nüéØ Objectifs de Recherche\n\n\n                  \n                  Mission \n                  \n                \n\n\nD√©velopper des outils de mod√©lisation int√©gr√©s pour anticiper et g√©rer l‚Äôimpact du changement climatique sur les ressources en eau, en particulier dans les contextes de socle cristallin.\n\n\n\nAxes principaux :\n\nüîÑ Interactions surface-subsurface dans les syst√®mes hydriques complexes\nüå°Ô∏è Mod√©lisation des impacts climatiques sur la disponibilit√© des ressources\nüõ†Ô∏è D√©veloppement d‚Äôoutils pour la communaut√© scientifique et op√©rationnelle\nüìä Aide √† la d√©cision pour les gestionnaires de ressources en eau\n\n\n\n\n                  \n                  Quote\n                  \n                \n\n\n‚ÄúL‚Äôavenir de la gestion de l‚Äôeau repose sur notre capacit√© √† comprendre et mod√©liser les interactions complexes entre surface et subsurface, dans un contexte de changement climatique.‚Äù\n\n\n"},"Notes/Python/Gestion-des-environnements":{"slug":"Notes/Python/Gestion-des-environnements","filePath":"Notes/Python/Gestion des environnements.md","title":"Gestion des environnements Python","links":["Notes/Python/Packages-Python"],"tags":["python","conda","mamba","environnements"],"content":"üêç Gestion des environnements Python\nLa gestion des environnements Python est cruciale pour maintenir des projets isol√©s et reproductibles. Plusieurs solutions existent : venv, virtualenv, pipenv, poetry, conda, mamba‚Ä¶\nDans cette note, je me concentre sur conda et mamba qui sont particuli√®rement adapt√©s pour mon utilisation (datasciences) et les projets n√©cessitant des d√©pendances complexes.\n\n\n                  \n                  Note compl√©mentaire \n                  \n                \n\n\nPour la gestion des packages dans les environnements, voir : Packages Python\n\n\n\n\nüì¶ Conda : Les fondamentaux\nüîó Documentation officielle de conda\nüß™ Gestion des environnements\nCr√©er un environnement\n# Environnement basique\nconda create -n mon_env python=3.13.2\n \n# Avec des packages sp√©cifiques\nconda create -n mon_env python=3.13.2 numpy pandas matplotlib\n \n# Depuis un canal sp√©cifique\nconda create -n mon_env -c conda-forge python=3.13.2 geopandas\n \n# Depuis un dossier sp√©cifique\nconda create -p ./envs/mon_env python=3.11\n \n# Cloner un environnement existant\nconda create -n clone_env --clone mon_env\nActiver/D√©sactiver\n# Activer\nconda activate mon_env\n \n# D√©sactiver\nconda deactivate\n \n# Lister les environnements\nconda env list\n# ou\nconda info --envs\n \n# Afficher l&#039;environnement actuel\necho $CONDA_DEFAULT_ENV\nInformations sur l‚Äôenvironnement\n# D√©tails de l&#039;environnement actif\nconda info\n \n# Packages install√©s dans l&#039;environnement\nconda list\n \n# Historique des modifications\nconda list --revisions\n \n# Revenir √† une r√©vision pr√©c√©dente\nconda install --revision 2\nSupprimer un environnement\nconda env remove -n mon_env\n# ou\nconda remove -n mon_env --all\n \n# Supprimer un environnement par chemin\nconda env remove -p ./envs/mon_env\nüìã Environnements reproductibles\nCr√©er depuis un fichier YAML\n# Cr√©er depuis environment.yml\nconda env create -f environment.yml\n \n# Sp√©cifier un nom diff√©rent\nconda env create -f environment.yml -n nouveau_nom\n \n# Mettre √† jour un environnement existant\nconda env update -f environment.yml --prune\nStructure d‚Äôun fichier environment.yml\nname: mon_projet\nchannels:\n  - conda-forge\n  - defaults\ndependencies:\n  - python=3.11\n  - numpy&gt;=1.24\n  - pandas\n  - matplotlib\n  - geopandas\n  - pip\n  - pip:\n    - requests\n    - some-pip-only-package\nvariables:\n  - VAR_NAME: value\nprefix: /path/to/env  # optionnel\nExporter un environnement\n# Export complet avec hash (reproductibilit√© stricte)\nconda env export &gt; environment.yml\n \n# Export sans hash (multi-plateforme)\nconda env export --no-builds &gt; environment.yml\n \n# Export historique des packages install√©s\nconda env export --from-history &gt; environment.yml\n \n# Export avec nom personnalis√©\nconda env export -n mon_env &gt; mon_projet.yml\n \n# Export type pip\nconda list --export &gt; requirements.txt\n\n\n                  \n                  Hash et reproductibilit√© \n                  \n                \n\n\n\nAvec hash : reproductibilit√© stricte, mais plateforme unique\nSans hash : plus souple, multi-plateforme\n‚Äîfrom-history : liste uniquement les packages explicitement install√©s\n\n\n\n\nüè∑Ô∏è Gestion avanc√©e\nRenommer un environnement\n# Pas de renommage direct : cloner puis supprimer l&#039;ancien\nconda create --name nouveau_nom --clone ancien_nom\nconda env remove --name ancien_nom\nVariables d‚Äôenvironnement\n# D√©finir des variables pour un environnement\nconda env config vars set VAR_NAME=value -n mon_env\n \n# Lister les variables\nconda env config vars list -n mon_env\n \n# Supprimer une variable\nconda env config vars unset VAR_NAME -n mon_env\nüßπ Nettoyage et maintenance\n# Nettoyer les packages non utilis√©s dans les caches\nconda clean --all\n \n# Nettoyer les paquets tarballs\nconda clean --tarballs\n \n# Nettoyer les caches de packages t√©l√©charg√©s\nconda clean --packages\n \n# Supprimer les index inutilis√©s\nconda clean --index-cache\n\n\n                  \n                  üßπ D√©tails sur conda clean\n                  \n                \n\n\n\n--all : supprime tout ce qui est nettoyable (√† utiliser avec pr√©caution)\n--tarballs : supprime les archives .tar.bz2 t√©l√©charg√©es\n\n‚úÖ Gagne de la place disque\n‚ö†Ô∏è Re-t√©l√©chargement n√©cessaire si r√©installation\n\n\n--packages : supprime les paquets inutilis√©s dans le cache\n\n‚úÖ Utile apr√®s des tests temporaires\n‚ö†Ô∏è Ne pas utiliser en plein d√©veloppement\n\n\n--index-cache : supprime les caches des index de paquets\n\n‚úÖ √Ä utiliser si conda semble bloqu√©\n‚ö†Ô∏è Allonge la prochaine r√©solution\n\n\n\n\n\n\n‚öôÔ∏è Optimiser conda : changer le solveur\n# Installer libmamba\nconda install -n base conda-libmamba-solver\n \n# L&#039;utiliser par d√©faut\nconda config --set solver libmamba\n \n# V√©rifier la configuration\nconda config --show solver\n\n\n                  \n                  Performance Libmamba est 10 √† 100 fois plus rapide que le solveur par d√©faut de conda.\n                  \n                \n\n\nüöÑ Mamba : L‚Äôalternative rapide\nüîó Documentation officielle de Mamba\nüß± Installation avec Miniforge\nMiniforge : distribution conda minimale avec mamba natif et conda-forge par d√©faut.\n# Linux/macOS\nwget github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh\nbash Miniforge3-Linux-x86_64.sh\n \n# Ou directement avec curl\ncurl -L -O github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh\nbash Miniforge3-Linux-x86_64.sh\n\n\n                  \n                  Installation recommand√©e Je recommande fortement Miniforge plut√¥t que Anaconda ou Miniconda pour :\n                  \n                \n\n\n\nMamba int√©gr√© nativement\nConda-forge par d√©faut\nPas de limitations commerciales\nPlus l√©ger qu‚ÄôAnaconda\n\n\n\n\n\n\n                  \n                  Liens utiles \n                  \n                \n\n\n\nMiniforge sur GitHub\nGuide d‚Äôinstallation d√©taill√©\n\n\n\n\nüîç Comparatif Mamba vs Conda\nAvantages techniques de Mamba\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAspectCondaMambaSolveurPython (lent)C++ (jusqu‚Äô√† 100x plus rapide)T√©l√©chargementsS√©quentielParall√®leRAMUsage √©lev√©Optimis√©InterfaceBasiquePlus lisible avec barres de progressionR√©solution conflitsParfois lenteBeaucoup plus rapide\nCompatibilit√© compl√®te\nMamba est un drop-in replacement de conda :\n# Remplacez simplement &#039;conda&#039; par &#039;mamba&#039;\nmamba create -n mon_env python=3.11\nmamba install -c conda-forge geopandas\nmamba env export &gt; environment.yml\nmamba activate mon_env\nLimites actuelles\n\nQuelques options tr√®s avanc√©es peuvent manquer\nBase d‚Äôutilisateurs plus petite (mais en croissance rapide)\nR√©solution parfois l√©g√®rement diff√©rente (g√©n√©ralement meilleure)\nMoins de documentation disponible en ligne\n\nüõ†Ô∏è Configuration recommand√©e\n# D√©finir conda-forge en priorit√©\nmamba config --add channels conda-forge\nmamba config --set channel_priority strict\n \n# Configuration SSL si probl√®mes r√©seau\nmamba config --set ssl_verify false  # √† √©viter en production\n \n# V√©rifier la configuration\nmamba config --show channels\nmamba config --show\n\nüéØ Workflows recommand√©s\nüöÄ Nouveau projet (workflow optimal)\n# 1. Cr√©er l&#039;environnement avec version Python sp√©cifique\nmamba create -n projet_2025 python=3.11\n \n# 2. Activer\nmamba activate projet_2025\n \n# 3. Installer les d√©pendances de base\nmamba install -c conda-forge numpy pandas matplotlib\n \n# 4. Exporter pour la reproductibilit√©\nmamba env export --no-builds &gt; environment.yml\n \n# 5. Ajouter au contr√¥le de version\ngit add environment.yml\nüîÑ Reproduire un environnement\n# Cr√©er depuis le fichier\nmamba env create -f environment.yml\n \n# Ou mettre √† jour un environnement existant\nmamba env update -f environment.yml --prune\n \n# Activer\nmamba activate nom_du_projet\nüîß Maintenance r√©guli√®re\n# Mettre √† jour l&#039;environnement\nmamba update --all\n \n# Exporter les changements\nmamba env export --no-builds &gt; environment.yml\n \n# Nettoyer p√©riodiquement\nmamba clean --tarballs\n\n\n                  \n                  Bonnes pratiques \n                  \n                \n\n\n\nUn environnement = un projet\nNoms clairs et explicites (projet_nom_version)\nExport r√©gulier de environment.yml\nToujours utiliser conda-forge comme canal principal\nUtiliser Mamba pour optimiser les performances\nVersionner les fichiers environment.yml\n\n\n\n\n\nüîß R√©solution de probl√®mes courants\nEnvironnement corrompu\n# Recr√©er un environnement depuis l&#039;export\nmamba env create -f environment.yml --force\n \n# Ou nettoyer et r√©installer\nmamba clean --all\nmamba env remove -n problematic_env\nmamba env create -f environment.yml\nConflits de d√©pendances\n# Forcer la r√©solution avec mamba (plus efficace)\nmamba install package_name --force-reinstall\n \n# Ou installer depuis un canal sp√©cifique\nmamba install -c conda-forge package_name\nProbl√®mes de performance\n# Passer √† libmamba si vous utilisez encore conda\nconda config --set solver libmamba\n \n# Ou migrer vers mamba/miniforge (recommand√©)\n\nüìö Ressources suppl√©mentaires\nDocumentation officielle\n\nDocumentation Conda\nDocumentation Mamba\nGuide Conda-forge\n\nGuides et cheat sheets\n\nCheat sheet Conda\nGuide migration vers Mamba\n\nNotes connexes\n\nPackages Python - Installation et gestion des librairies\n"},"Notes/Python/Packages-Python":{"slug":"Notes/Python/Packages-Python","filePath":"Notes/Python/Packages Python.md","title":"Gestion des packages Python","links":["Notes/Python/Gestion-des-environnements"],"tags":["python","conda","mamba","pip","packages","librairies"],"content":"üì¶ Gestion des packages Python\nCette note compl√®te le guide sur la Gestion des environnements en d√©taillant l‚Äôinstallation et la gestion des packages dans les environnements conda/mamba.\n\nüîç Conda vs Pip : Comprendre les diff√©rences\nüèóÔ∏è Architecture et fonctionnement\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAspectCondaPipGestionnairePackages + environnementsPackages uniquementD√©pendancesBinaires pr√©-compil√©esSource + compilationLangagesPython, R, C++, Fortran‚Ä¶Python uniquementInstallationBinaires optimis√©sCompilation locale possible\nüéØ Quand utiliser quoi ?\nPr√©f√©rer Conda/Mamba pour :\n\nPackages scientifiques (numpy, scipy, pandas, matplotlib)\nLibrairies g√©ospatiales (GDAL, GEOS, PROJ)\nD√©pendances complexes (OpenCV, TensorFlow, PyTorch)\nPackages avec extensions C (lxml, Pillow, psycopg2)\n\nUtiliser Pip pour :\n\nPackages Python pur sans d√©pendances complexes\nPackages non disponibles sur conda-forge\nVersions de d√©veloppement depuis Git\nPackages locaux en mode √©ditable\n\n\nüõ†Ô∏è Installation avec Conda/Mamba\n\n\n                  \n                  Possible de remplacer conda par mamba comme expliqu√© dans Compatibilit√© compl√®te\n                  \n                \n\nüì• Installation basique\n# Package simple\nconda install numpy\n \n# Version sp√©cifique\nconda install numpy=1.24.0\nconda install &quot;numpy&gt;=1.24,&lt;1.25&quot;\n \n# Canal sp√©cifique (recommand√© : conda-forge)\nconda install -c conda-forge geopandas\n \n# Plusieurs packages\nconda install -c conda-forge numpy pandas matplotlib geopandas\nüåê Gestion des canaux\n# Ajouter un canal\nconda config --add channels conda-forge\n \n# Priorit√© des canaux\nconda config --set channel_priority strict\n \n# Lister les canaux configur√©s\nconda config --show channels\n \n# Installer depuis un canal sp√©cifique sans l&#039;ajouter\nconda install -c bioconda package_name\n \n# Ordre de priorit√© des canaux (par d√©faut)\nconda config --add channels defaults\nconda config --add channels conda-forge  # Plus prioritaire\n\n\n                  \n                  Canaux recommand√©s \n                  \n                \n\n\n\nconda-forge : canal communautaire de r√©f√©rence\ndefaults : canal officiel Anaconda\npytorch : pour PyTorch et d√©pendances\n\n\n\n\nüîÑ Mise √† jour et suppression\n# Mettre √† jour un package\nconda update numpy\n \n# Mettre √† jour tous les packages\nconda update --all\n \n# Supprimer un package\nconda remove numpy\n \n# Supprimer avec d√©pendances inutilis√©es\nconda remove numpy --force-remove\n \n# Lister les packages install√©s\nconda list\nconda list numpy  # recherche sp√©cifique\nüîç Recherche de packages\n# Rechercher un package\nconda search numpy\n \n# Rechercher dans un canal sp√©cifique\nconda search -c conda-forge gdal\n \n# Informations d√©taill√©es sur un package\nconda info numpy\n \n# Voir les d√©pendances d&#039;un package\nconda depends numpy\n\nüêç Installation avec Pip\nüì¶ Installation depuis PyPI\n# Installation basique\npip install requests\n \n# Version sp√©cifique\npip install numpy==1.24.0\npip install &quot;numpy&gt;=1.24,&lt;1.25&quot;\n \n# Plusieurs packages\npip install requests beautifulsoup4 lxml\n \n# Depuis requirements.txt\npip install -r requirements.txt\nüîó Installation depuis Git\n# Depuis une branche sp√©cifique\npip install git+github.com/user/repo.git@branch_name\n \n# Depuis un tag\npip install git+github.com/user/repo.git@v1.0.0\n \n# Depuis un commit sp√©cifique\npip install git+github.com/user/repo.git@abc123\n \n# Avec SSH (si configur√©)\npip install git+ssh://git@github.com/user/repo.git\n \n# Depuis GitLab ou autres\npip install git+gitlab.com/user/repo.git\nüè† Installation en mode d√©veloppement\n# Installation locale √©ditable (mode d√©veloppement)\npip install -e .\n \n# Avec des d√©pendances optionnelles\npip install -e .[dev]\npip install -e .[test,docs]\n \n# Depuis un autre r√©pertoire\npip install -e ./path/to/package\n \n# D√©sinstaller un package en mode √©ditable\npip uninstall package_name\nüîß Options avanc√©es de Pip\n# Installation sans cache\npip install --no-cache-dir package_name\n \n# Installation sans d√©pendances\npip install --no-deps package_name\n \n# Installation dans un r√©pertoire sp√©cifique\npip install --target ./lib package_name\n \n# Forcer la r√©installation\npip install --force-reinstall package_name\n \n# Installation depuis un fichier wheel local\npip install ./package-1.0-py3-none-any.whl\n \n# T√©l√©charger sans installer\npip download package_name\n\nüåç Packages g√©ospatiaux : cas particuliers\nüó∫Ô∏è GDAL et √©cosyst√®me g√©ospatial\nLes packages g√©ospatiaux ont des d√©pendances complexes (GDAL, GEOS, PROJ, etc.). Conda est fortement recommand√© :\n# Installation recommand√©e avec mamba\nconda install -c conda-forge gdal geos proj\n \n# Package g√©ospatiaux populaires\nconda install -c conda-forge geopandas rasterio fiona shapely\n \n# Stack compl√®te g√©ospatiale\nconda install -c conda-forge geopandas rasterio fiona shapely pyproj cartopy folium contextily\n\n\n                  \n                  GDAL avec Pip Installer GDAL avec pip peut √™tre tr√®s probl√©matique :\n                  \n                \n\n\n\nCompilation complexe\nD√©pendances syst√®me requises\nVersions incompatibles fr√©quentes\n\nUtilisez toujours conda/mamba pour GDAL !\n\n\n\nüß≠ Packages sp√©cialis√©s g√©osciences\n# Hydrologie\nconda install -c conda-forge flopy modflow-devtools\n \n# Traitement d&#039;images satellite\nconda install -c conda-forge rioxarray xarray dask\n \n# Visualisation cartographique\nconda install -c conda-forge cartopy geoviews holoviews\n \n# Machine learning g√©ospatial\nconda install -c conda-forge scikit-image scikit-learn\n\nüîÑ Strat√©gies de gestion hybride Conda + Pip\nüìã Ordre d‚Äôinstallation recommand√©\n# 1. D&#039;abord, installer les packages scientifiques/g√©ospatiaux avec conda\nconda install -c conda-forge numpy pandas geopandas matplotlib\n \n# 2. Ensuite, compl√©ter avec pip pour les packages purs Python [ou conda]\npip install requests beautifulsoup4 streamlit\n \n# 3. Packages de d√©veloppement depuis Git\npip install git+github.com/user/dev_package.git\nüìù Fichier environment.yml hybride\nname: projet_geo\nchannels:\n  - conda-forge\n  - defaults\ndependencies:\n  # Packages conda (prioritaires)\n  - python=3.11\n  - numpy\n  - pandas\n  - geopandas\n  - matplotlib\n  - jupyter\n  - streamlit\n  - requests\n  # Packages pip\n  - pip\n  - pip:\n    - git+github.com/user/custom_package.git\n    - -e ./local_package  # package local en mode √©ditable\n\n\n                  \n                  Bonnes pratiques hybrides \n                  \n                \n\n\n\nToujours installer conda packages en premier\nPip en compl√©ment pour les packages non disponibles\n√âviter de m√©langer conda et pip pour le m√™me package\nExporter r√©guli√®rement avec conda env export\n\n\n\n\n\nüîß R√©solution de conflits et probl√®mes\n‚ö†Ô∏è Conflits de d√©pendances\n# Diagnostiquer les conflits\nconda list --show-channel-urls\n \n# Forcer la r√©solution avec mamba\nconda install package_name --force-reinstall\n \n# Sp√©cifier explicitement les canaux\nconda install -c conda-forge -c defaults package_name\n \n# En dernier recours : nettoyer et recr√©er\nconda env remove -n env_name\nconda env create -f environment.yml\nüßπ Nettoyage des packages\n# Conda/Mamba\nconda clean --packages --tarballs\n \n# Pip\npip cache purge\n \n# Voir l&#039;espace utilis√©\npip cache info\n\nüìä Monitoring et audit des packages\nüîç Informations sur les packages\n# D√©tails d&#039;un package conda\nconda info package_name\n \n# Historique des installations\nconda list --revisions\n \n# Packages pip avec leurs d√©pendances\npip show package_name\n \n# Arbre des d√©pendances (avec pipdeptree)\npip install pipdeptree\npipdeptree\nüîê S√©curit√© et vuln√©rabilit√©s\n# Audit de s√©curit√© avec pip-audit\npip install pip-audit\npip-audit\n \n# V√©rification des packages obsol√®tes\npip list --outdated\n \n# Mise √† jour s√©curis√©e\npip install --upgrade package_name\n\nüîó Ressources et documentation\nüìñ Documentation officielle\n\nConda packages\nPip user guide\nConda-forge documentation\n\nüõ†Ô∏è Outils utiles\n\nconda-tree : visualiser l‚Äôarbre des d√©pendances\npipdeptree : arbre des d√©pendances pip\npip-audit : audit de s√©curit√©\n\nüìã Notes connexes\n\nGestion des environnements - Cr√©ation et gestion des environnements\n"},"index":{"slug":"index","filePath":"index.md","title":"üè† Home","links":["Notes/Profil/Profil","notes/python","notes/linux","notes/dev","notes/sig","notes/vrac"],"tags":["home"],"content":"Actuellement en th√®se de doctorat en mod√©lisation hydrog√©ologique, je participe au d√©veloppement d‚Äôoutils Python pour automatiser le d√©ploiement de mod√®les d‚Äôeaux souterraines. Dans le cadre de mes travaux de recherche, je me concentre sur l‚Äôam√©lioration de la repr√©sentation des interactions surface-subsurface dans les aquif√®res de socle cristallin.\nCe site rassemble mes notes techniques, scripts et r√©flexions sur la mod√©lisation hydrog√©ologique, le d√©veloppement Python et les outils g√©ospatiaux.\n\n\n/* D√©sactive les popovers uniquement sur cette page */\n.popover {\n  display: none !important;\n}\n\nüìö Navigation\n\n  \n    üë®‚ÄçüéìProfil\n  \n  \n    üêçPython\n  \n  \n    üíªLinux\n  \n  \n    ‚öôÔ∏èD√©veloppement\n  \n  \n    üó∫Ô∏èSIG\n  \n  \n    üóÇÔ∏èVrac\n  \n\n\nüöÄ Projets de recherche\n\n  \n    \n      \n      \n        HydroModPy\n        Bo√Æte √† outils Python pour la mod√©lisation hydrog√©ologique\n      \n    \n    HydroModPy automatise le d√©ploiement de mod√®les d&#039;eaux souterraines. Ma contribution : d√©veloppement de la mod√©lisation des r√©servoirs et lacs.\n    Python\n    MODFLOW\n  \n  \n    \n      \n      \n        GeoP4th\n        Plateforme de traitement de trajectoires spatio-temporelles\n      \n    \n    Collection d&#039;outils Python pour standardiser les donn√©es spatio-temporelles. Ma contribution : d√©veloppement d&#039;outils pour l&#039;analyse des trajectoires.\n    Python\n    G√©ospatial\n  \n\n\nüîó Contact &amp; Liens\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n  \n    üèõÔ∏è\n    Mail professionnel\n  \n  \n    üìß\n    Mail personnel\n  \n"}}